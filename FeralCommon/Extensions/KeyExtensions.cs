using System;
using UnityEngine.InputSystem;

namespace FeralCommon.Extensions;

public static class KeyExtensions
{
    public static bool PressedThisFrame(this Key key)
    {
        return Keyboard.current[key].wasPressedThisFrame;
    }

    public static string ToKbmPath(this Key key)
    {
        return key switch
        {
            Key.Space => "<Keyboard>/space",
            Key.Enter => "<Keyboard>/enter",
            Key.Tab => "<Keyboard>/tab",
            Key.Backquote => "<Keyboard>/backquote",
            Key.Quote => "<Keyboard>/quote",
            Key.Semicolon => "<Keyboard>/semicolon",
            Key.Comma => "<Keyboard>/comma",
            Key.Period => "<Keyboard>/period",
            Key.Slash => "<Keyboard>/slash",
            Key.Backslash => "<Keyboard>/backslash",
            Key.LeftBracket => "<Keyboard>/leftBracket",
            Key.RightBracket => "<Keyboard>/rightBracket",
            Key.Minus => "<Keyboard>/minus",
            Key.Equals => "<Keyboard>/equals",
            Key.A => "<Keyboard>/a",
            Key.B => "<Keyboard>/b",
            Key.C => "<Keyboard>/c",
            Key.D => "<Keyboard>/d",
            Key.E => "<Keyboard>/e",
            Key.F => "<Keyboard>/f",
            Key.G => "<Keyboard>/g",
            Key.H => "<Keyboard>/h",
            Key.I => "<Keyboard>/i",
            Key.J => "<Keyboard>/j",
            Key.K => "<Keyboard>/k",
            Key.L => "<Keyboard>/l",
            Key.M => "<Keyboard>/m",
            Key.N => "<Keyboard>/n",
            Key.O => "<Keyboard>/o",
            Key.P => "<Keyboard>/p",
            Key.Q => "<Keyboard>/q",
            Key.R => "<Keyboard>/r",
            Key.S => "<Keyboard>/s",
            Key.T => "<Keyboard>/t",
            Key.U => "<Keyboard>/u",
            Key.V => "<Keyboard>/v",
            Key.W => "<Keyboard>/w",
            Key.X => "<Keyboard>/x",
            Key.Y => "<Keyboard>/y",
            Key.Z => "<Keyboard>/z",
            Key.Digit1 => "<Keyboard>/1",
            Key.Digit2 => "<Keyboard>/2",
            Key.Digit3 => "<Keyboard>/3",
            Key.Digit4 => "<Keyboard>/4",
            Key.Digit5 => "<Keyboard>/5",
            Key.Digit6 => "<Keyboard>/6",
            Key.Digit7 => "<Keyboard>/7",
            Key.Digit8 => "<Keyboard>/8",
            Key.Digit9 => "<Keyboard>/9",
            Key.Digit0 => "<Keyboard>/0",
            Key.LeftShift => "<Keyboard>/leftShift",
            Key.RightShift => "<Keyboard>/rightShift",
            Key.LeftAlt => "<Keyboard>/leftAlt",
            Key.RightAlt => "<Keyboard>/rightAlt",
            Key.LeftCtrl => "<Keyboard>/leftCtrl",
            Key.RightCtrl => "<Keyboard>/rightCtrl",
            Key.LeftMeta => "<Keyboard>/leftMeta",
            Key.RightMeta => "<Keyboard>/rightMeta",
            Key.ContextMenu => "<Keyboard>/contextMenu",
            Key.Escape => "<Keyboard>/escape",
            Key.LeftArrow => "<Keyboard>/leftArrow",
            Key.RightArrow => "<Keyboard>/rightArrow",
            Key.UpArrow => "<Keyboard>/upArrow",
            Key.DownArrow => "<Keyboard>/downArrow",
            Key.Backspace => "<Keyboard>/backspace",
            Key.PageDown => "<Keyboard>/pageDown",
            Key.PageUp => "<Keyboard>/pageUp",
            Key.Home => "<Keyboard>/home",
            Key.End => "<Keyboard>/end",
            Key.Insert => "<Keyboard>/insert",
            Key.Delete => "<Keyboard>/delete",
            Key.CapsLock => "<Keyboard>/capsLock",
            Key.NumLock => "<Keyboard>/numLock",
            Key.PrintScreen => "<Keyboard>/printScreen",
            Key.ScrollLock => "<Keyboard>/scrollLock",
            Key.Pause => "<Keyboard>/pause",
            Key.NumpadEnter => "<Keyboard>/numpadEnter",
            Key.NumpadDivide => "<Keyboard>/numpadDivide",
            Key.NumpadMultiply => "<Keyboard>/numpadMultiply",
            Key.NumpadPlus => "<Keyboard>/numpadPlus",
            Key.NumpadMinus => "<Keyboard>/numpadMinus",
            Key.NumpadPeriod => "<Keyboard>/numpadPeriod",
            Key.NumpadEquals => "<Keyboard>/numpadEquals",
            Key.Numpad0 => "<Keyboard>/numpad0",
            Key.Numpad1 => "<Keyboard>/numpad1",
            Key.Numpad2 => "<Keyboard>/numpad2",
            Key.Numpad3 => "<Keyboard>/numpad3",
            Key.Numpad4 => "<Keyboard>/numpad4",
            Key.Numpad5 => "<Keyboard>/numpad5",
            Key.Numpad6 => "<Keyboard>/numpad6",
            Key.Numpad7 => "<Keyboard>/numpad7",
            Key.Numpad8 => "<Keyboard>/numpad8",
            Key.Numpad9 => "<Keyboard>/numpad9",
            Key.F1 => "<Keyboard>/f1",
            Key.F2 => "<Keyboard>/f2",
            Key.F3 => "<Keyboard>/f3",
            Key.F4 => "<Keyboard>/f4",
            Key.F5 => "<Keyboard>/f5",
            Key.F6 => "<Keyboard>/f6",
            Key.F7 => "<Keyboard>/f7",
            Key.F8 => "<Keyboard>/f8",
            Key.F9 => "<Keyboard>/f9",
            Key.F10 => "<Keyboard>/f10",
            Key.F11 => "<Keyboard>/f11",
            Key.F12 => "<Keyboard>/f12",
            Key.None => "<Keyboard>/none",
            Key.OEM1 => "<Keyboard>/oem1",
            Key.OEM2 => "<Keyboard>/oem2",
            Key.OEM3 => "<Keyboard>/oem3",
            Key.OEM4 => "<Keyboard>/oem4",
            Key.OEM5 => "<Keyboard>/oem5",
            Key.IMESelected => "<Keyboard>/imeSelected",
            _ => throw new ArgumentOutOfRangeException(nameof(key), key, null)
        };
    }
}
